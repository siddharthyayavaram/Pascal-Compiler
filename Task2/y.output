State 40 conflicts: 2 reduce/reduce


Grammar

    0 $accept: sentence $end

    1 sentence: P V M

    2 $@1: ε

    3 $@2: ε

    4 P: Prog $@1 Identifier $@2 SC

    5 $@3: ε

    6 V: Var $@3 LS

    7 LS: L LS
    8   | L

    9 L: LHS Colon RHS SC

   10 RHS: Type

   11 $@4: ε

   12 $@5: ε

   13 RHS: Array $@4 ArrayOpen $@5 NumberLiteral DoubleDots NumberLiteral ArrayClose Of Type

   14 LHS: Identifier comma LHS
   15    | Identifier

   16 M: Begin B End Stop

   17 B: S B
   18  | S

   19 S: I AsmtOp Expression SC
   20  | Read OpenParenthesis I CloseParenthesis SC
   21  | Write OpenParenthesis WriteBody CloseParenthesis SC
   22  | IfStatement
   23  | ForLoop
   24  | WhileLoop

   25 I: Identifier
   26  | Identifier ArrayOpen ArithmeticExpression ArrayClose

   27 Block: Begin B End

   28 WriteBody: I comma WriteBody
   29          | I
   30          | String comma WriteBody
   31          | String

   32 ForLoop: For I AsmtOp ArithmeticExpression To ArithmeticExpression Do Block SC
   33        | For I AsmtOp ArithmeticExpression DownTo ArithmeticExpression Do Block SC

   34 IfStatement: If BooleanExpression Then Block SC
   35            | If BooleanExpression Then Block Else Block SC

   36 WhileLoop: While BooleanExpression Do Block SC

   37 Expression: BooleanExpression
   38           | ArithmeticExpression

   39 ArithmeticExpression: T
   40                     | ArithmeticExpression Plus T
   41                     | ArithmeticExpression Minus T

   42 T: F
   43  | T Mul F
   44  | T Div F
   45  | T Mod F

   46 F: NumberLiteral
   47  | CharacterLiteral
   48  | OpenParenthesis ArithmeticExpression CloseParenthesis
   49  | I

   50 BooleanExpression: BooleanT
   51                  | BooleanExpression Or BooleanT

   52 BooleanT: BooleanF
   53         | BooleanT And BooleanF

   54 BooleanF: Not BooleanF
   55         | OpenParenthesis BooleanExpression CloseParenthesis
   56         | ArithmeticExpression RelationalOperator ArithmeticExpression
   57         | I


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    Identifier (258) 4 14 15 25 26
    Type (259) 10 13
    Begin (260) 16 27
    End (261) 16 27
    Var (262) 6
    Prog (263) 4
    SC (264) 4 9 19 20 21 32 33 34 35 36
    comma (265) 14 28 30
    Colon (266) 9
    Stop (267) 16
    Read (268) 20
    Write (269) 21
    Array (270) 13
    If (271) 34 35
    Then (272) 34 35
    Else (273) 35
    For (274) 32 33
    While (275) 36
    AsmtOp (276) 19 32 33
    Not (277) 54
    RelationalOperator (278) 56
    OpenParenthesis (279) 20 21 48 55
    CloseParenthesis (280) 20 21 48 55
    String (281) 30 31
    ArrayOpen (282) 13 26
    ArrayClose (283) 13 26
    NumberLiteral (284) 13 46
    CharacterLiteral (285) 47
    Of (286) 13
    DoubleDots (287) 13
    Do (288) 32 33 36
    To (289) 32
    DownTo (290) 33
    Plus (291) 40
    Minus (292) 41
    Mul (293) 43
    Mod (294) 45
    Div (295) 44
    Or (296) 51
    And (297) 53


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    sentence (44)
        on left: 1
        on right: 0
    P (45)
        on left: 4
        on right: 1
    $@1 (46)
        on left: 2
        on right: 4
    $@2 (47)
        on left: 3
        on right: 4
    V (48)
        on left: 6
        on right: 1
    $@3 (49)
        on left: 5
        on right: 6
    LS (50)
        on left: 7 8
        on right: 6 7
    L (51)
        on left: 9
        on right: 7 8
    RHS (52)
        on left: 10 13
        on right: 9
    $@4 (53)
        on left: 11
        on right: 13
    $@5 (54)
        on left: 12
        on right: 13
    LHS (55)
        on left: 14 15
        on right: 9 14
    M (56)
        on left: 16
        on right: 1
    B (57)
        on left: 17 18
        on right: 16 17 27
    S (58)
        on left: 19 20 21 22 23 24
        on right: 17 18
    I (59)
        on left: 25 26
        on right: 19 20 28 29 32 33 49 57
    Block (60)
        on left: 27
        on right: 32 33 34 35 36
    WriteBody (61)
        on left: 28 29 30 31
        on right: 21 28 30
    ForLoop (62)
        on left: 32 33
        on right: 23
    IfStatement (63)
        on left: 34 35
        on right: 22
    WhileLoop (64)
        on left: 36
        on right: 24
    Expression (65)
        on left: 37 38
        on right: 19
    ArithmeticExpression (66)
        on left: 39 40 41
        on right: 26 32 33 38 40 41 48 56
    T (67)
        on left: 42 43 44 45
        on right: 39 40 41 43 44 45
    F (68)
        on left: 46 47 48 49
        on right: 42 43 44 45
    BooleanExpression (69)
        on left: 50 51
        on right: 34 35 36 37 51 55
    BooleanT (70)
        on left: 52 53
        on right: 50 51 53
    BooleanF (71)
        on left: 54 55 56 57
        on right: 52 53 54


State 0

    0 $accept: • sentence $end

    Prog  shift, and go to state 1

    sentence  go to state 2
    P         go to state 3


State 1

    4 P: Prog • $@1 Identifier $@2 SC

    $default  reduce using rule 2 ($@1)

    $@1  go to state 4


State 2

    0 $accept: sentence • $end

    $end  shift, and go to state 5


State 3

    1 sentence: P • V M

    Var  shift, and go to state 6

    V  go to state 7


State 4

    4 P: Prog $@1 • Identifier $@2 SC

    Identifier  shift, and go to state 8


State 5

    0 $accept: sentence $end •

    $default  accept


State 6

    6 V: Var • $@3 LS

    $default  reduce using rule 5 ($@3)

    $@3  go to state 9


State 7

    1 sentence: P V • M

    Begin  shift, and go to state 10

    M  go to state 11


State 8

    4 P: Prog $@1 Identifier • $@2 SC

    $default  reduce using rule 3 ($@2)

    $@2  go to state 12


State 9

    6 V: Var $@3 • LS

    Identifier  shift, and go to state 13

    LS   go to state 14
    L    go to state 15
    LHS  go to state 16


State 10

   16 M: Begin • B End Stop

    Identifier  shift, and go to state 17
    Read        shift, and go to state 18
    Write       shift, and go to state 19
    If          shift, and go to state 20
    For         shift, and go to state 21
    While       shift, and go to state 22

    B            go to state 23
    S            go to state 24
    I            go to state 25
    ForLoop      go to state 26
    IfStatement  go to state 27
    WhileLoop    go to state 28


State 11

    1 sentence: P V M •

    $default  reduce using rule 1 (sentence)


State 12

    4 P: Prog $@1 Identifier $@2 • SC

    SC  shift, and go to state 29


State 13

   14 LHS: Identifier • comma LHS
   15    | Identifier •

    comma  shift, and go to state 30

    $default  reduce using rule 15 (LHS)


State 14

    6 V: Var $@3 LS •

    $default  reduce using rule 6 (V)


State 15

    7 LS: L • LS
    8   | L •

    Identifier  shift, and go to state 13

    $default  reduce using rule 8 (LS)

    LS   go to state 31
    L    go to state 15
    LHS  go to state 16


State 16

    9 L: LHS • Colon RHS SC

    Colon  shift, and go to state 32


State 17

   25 I: Identifier •
   26  | Identifier • ArrayOpen ArithmeticExpression ArrayClose

    ArrayOpen  shift, and go to state 33

    $default  reduce using rule 25 (I)


State 18

   20 S: Read • OpenParenthesis I CloseParenthesis SC

    OpenParenthesis  shift, and go to state 34


State 19

   21 S: Write • OpenParenthesis WriteBody CloseParenthesis SC

    OpenParenthesis  shift, and go to state 35


State 20

   34 IfStatement: If • BooleanExpression Then Block SC
   35            | If • BooleanExpression Then Block Else Block SC

    Identifier        shift, and go to state 17
    Not               shift, and go to state 36
    OpenParenthesis   shift, and go to state 37
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I                     go to state 40
    ArithmeticExpression  go to state 41
    T                     go to state 42
    F                     go to state 43
    BooleanExpression     go to state 44
    BooleanT              go to state 45
    BooleanF              go to state 46


State 21

   32 ForLoop: For • I AsmtOp ArithmeticExpression To ArithmeticExpression Do Block SC
   33        | For • I AsmtOp ArithmeticExpression DownTo ArithmeticExpression Do Block SC

    Identifier  shift, and go to state 17

    I  go to state 47


State 22

   36 WhileLoop: While • BooleanExpression Do Block SC

    Identifier        shift, and go to state 17
    Not               shift, and go to state 36
    OpenParenthesis   shift, and go to state 37
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I                     go to state 40
    ArithmeticExpression  go to state 41
    T                     go to state 42
    F                     go to state 43
    BooleanExpression     go to state 48
    BooleanT              go to state 45
    BooleanF              go to state 46


State 23

   16 M: Begin B • End Stop

    End  shift, and go to state 49


State 24

   17 B: S • B
   18  | S •

    Identifier  shift, and go to state 17
    Read        shift, and go to state 18
    Write       shift, and go to state 19
    If          shift, and go to state 20
    For         shift, and go to state 21
    While       shift, and go to state 22

    $default  reduce using rule 18 (B)

    B            go to state 50
    S            go to state 24
    I            go to state 25
    ForLoop      go to state 26
    IfStatement  go to state 27
    WhileLoop    go to state 28


State 25

   19 S: I • AsmtOp Expression SC

    AsmtOp  shift, and go to state 51


State 26

   23 S: ForLoop •

    $default  reduce using rule 23 (S)


State 27

   22 S: IfStatement •

    $default  reduce using rule 22 (S)


State 28

   24 S: WhileLoop •

    $default  reduce using rule 24 (S)


State 29

    4 P: Prog $@1 Identifier $@2 SC •

    $default  reduce using rule 4 (P)


State 30

   14 LHS: Identifier comma • LHS

    Identifier  shift, and go to state 13

    LHS  go to state 52


State 31

    7 LS: L LS •

    $default  reduce using rule 7 (LS)


State 32

    9 L: LHS Colon • RHS SC

    Type   shift, and go to state 53
    Array  shift, and go to state 54

    RHS  go to state 55


State 33

   26 I: Identifier ArrayOpen • ArithmeticExpression ArrayClose

    Identifier        shift, and go to state 17
    OpenParenthesis   shift, and go to state 56
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I                     go to state 57
    ArithmeticExpression  go to state 58
    T                     go to state 42
    F                     go to state 43


State 34

   20 S: Read OpenParenthesis • I CloseParenthesis SC

    Identifier  shift, and go to state 17

    I  go to state 59


State 35

   21 S: Write OpenParenthesis • WriteBody CloseParenthesis SC

    Identifier  shift, and go to state 17
    String      shift, and go to state 60

    I          go to state 61
    WriteBody  go to state 62


State 36

   54 BooleanF: Not • BooleanF

    Identifier        shift, and go to state 17
    Not               shift, and go to state 36
    OpenParenthesis   shift, and go to state 37
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I                     go to state 40
    ArithmeticExpression  go to state 41
    T                     go to state 42
    F                     go to state 43
    BooleanF              go to state 63


State 37

   48 F: OpenParenthesis • ArithmeticExpression CloseParenthesis
   55 BooleanF: OpenParenthesis • BooleanExpression CloseParenthesis

    Identifier        shift, and go to state 17
    Not               shift, and go to state 36
    OpenParenthesis   shift, and go to state 37
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I                     go to state 40
    ArithmeticExpression  go to state 64
    T                     go to state 42
    F                     go to state 43
    BooleanExpression     go to state 65
    BooleanT              go to state 45
    BooleanF              go to state 46


State 38

   46 F: NumberLiteral •

    $default  reduce using rule 46 (F)


State 39

   47 F: CharacterLiteral •

    $default  reduce using rule 47 (F)


State 40

   49 F: I •
   57 BooleanF: I •

    SC                reduce using rule 49 (F)
    SC                [reduce using rule 57 (BooleanF)]
    Then              reduce using rule 57 (BooleanF)
    CloseParenthesis  reduce using rule 49 (F)
    CloseParenthesis  [reduce using rule 57 (BooleanF)]
    Do                reduce using rule 57 (BooleanF)
    Or                reduce using rule 57 (BooleanF)
    And               reduce using rule 57 (BooleanF)
    $default          reduce using rule 49 (F)

    reduce/reduce conflict on tokens SC, CloseParenthesis:
       49 F: I •
       57 BooleanF: I •
      Example: I •
      First reduce derivation
        Expression
        ↳ 38: ArithmeticExpression
              ↳ 39: T
                    ↳ 42: F
                          ↳ 49: I •
      Second reduce derivation
        Expression
        ↳ 37: BooleanExpression
              ↳ 50: BooleanT
                    ↳ 52: BooleanF
                          ↳ 57: I •



State 41

   40 ArithmeticExpression: ArithmeticExpression • Plus T
   41                     | ArithmeticExpression • Minus T
   56 BooleanF: ArithmeticExpression • RelationalOperator ArithmeticExpression

    RelationalOperator  shift, and go to state 66
    Plus                shift, and go to state 67
    Minus               shift, and go to state 68


State 42

   39 ArithmeticExpression: T •
   43 T: T • Mul F
   44  | T • Div F
   45  | T • Mod F

    Mul  shift, and go to state 69
    Mod  shift, and go to state 70
    Div  shift, and go to state 71

    $default  reduce using rule 39 (ArithmeticExpression)


State 43

   42 T: F •

    $default  reduce using rule 42 (T)


State 44

   34 IfStatement: If BooleanExpression • Then Block SC
   35            | If BooleanExpression • Then Block Else Block SC
   51 BooleanExpression: BooleanExpression • Or BooleanT

    Then  shift, and go to state 72
    Or    shift, and go to state 73


State 45

   50 BooleanExpression: BooleanT •
   53 BooleanT: BooleanT • And BooleanF

    And  shift, and go to state 74

    $default  reduce using rule 50 (BooleanExpression)


State 46

   52 BooleanT: BooleanF •

    $default  reduce using rule 52 (BooleanT)


State 47

   32 ForLoop: For I • AsmtOp ArithmeticExpression To ArithmeticExpression Do Block SC
   33        | For I • AsmtOp ArithmeticExpression DownTo ArithmeticExpression Do Block SC

    AsmtOp  shift, and go to state 75


State 48

   36 WhileLoop: While BooleanExpression • Do Block SC
   51 BooleanExpression: BooleanExpression • Or BooleanT

    Do  shift, and go to state 76
    Or  shift, and go to state 73


State 49

   16 M: Begin B End • Stop

    Stop  shift, and go to state 77


State 50

   17 B: S B •

    $default  reduce using rule 17 (B)


State 51

   19 S: I AsmtOp • Expression SC

    Identifier        shift, and go to state 17
    Not               shift, and go to state 36
    OpenParenthesis   shift, and go to state 37
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I                     go to state 40
    Expression            go to state 78
    ArithmeticExpression  go to state 79
    T                     go to state 42
    F                     go to state 43
    BooleanExpression     go to state 80
    BooleanT              go to state 45
    BooleanF              go to state 46


State 52

   14 LHS: Identifier comma LHS •

    $default  reduce using rule 14 (LHS)


State 53

   10 RHS: Type •

    $default  reduce using rule 10 (RHS)


State 54

   13 RHS: Array • $@4 ArrayOpen $@5 NumberLiteral DoubleDots NumberLiteral ArrayClose Of Type

    $default  reduce using rule 11 ($@4)

    $@4  go to state 81


State 55

    9 L: LHS Colon RHS • SC

    SC  shift, and go to state 82


State 56

   48 F: OpenParenthesis • ArithmeticExpression CloseParenthesis

    Identifier        shift, and go to state 17
    OpenParenthesis   shift, and go to state 56
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I                     go to state 57
    ArithmeticExpression  go to state 83
    T                     go to state 42
    F                     go to state 43


State 57

   49 F: I •

    $default  reduce using rule 49 (F)


State 58

   26 I: Identifier ArrayOpen ArithmeticExpression • ArrayClose
   40 ArithmeticExpression: ArithmeticExpression • Plus T
   41                     | ArithmeticExpression • Minus T

    ArrayClose  shift, and go to state 84
    Plus        shift, and go to state 67
    Minus       shift, and go to state 68


State 59

   20 S: Read OpenParenthesis I • CloseParenthesis SC

    CloseParenthesis  shift, and go to state 85


State 60

   30 WriteBody: String • comma WriteBody
   31          | String •

    comma  shift, and go to state 86

    $default  reduce using rule 31 (WriteBody)


State 61

   28 WriteBody: I • comma WriteBody
   29          | I •

    comma  shift, and go to state 87

    $default  reduce using rule 29 (WriteBody)


State 62

   21 S: Write OpenParenthesis WriteBody • CloseParenthesis SC

    CloseParenthesis  shift, and go to state 88


State 63

   54 BooleanF: Not BooleanF •

    $default  reduce using rule 54 (BooleanF)


State 64

   40 ArithmeticExpression: ArithmeticExpression • Plus T
   41                     | ArithmeticExpression • Minus T
   48 F: OpenParenthesis ArithmeticExpression • CloseParenthesis
   56 BooleanF: ArithmeticExpression • RelationalOperator ArithmeticExpression

    RelationalOperator  shift, and go to state 66
    CloseParenthesis    shift, and go to state 89
    Plus                shift, and go to state 67
    Minus               shift, and go to state 68


State 65

   51 BooleanExpression: BooleanExpression • Or BooleanT
   55 BooleanF: OpenParenthesis BooleanExpression • CloseParenthesis

    CloseParenthesis  shift, and go to state 90
    Or                shift, and go to state 73


State 66

   56 BooleanF: ArithmeticExpression RelationalOperator • ArithmeticExpression

    Identifier        shift, and go to state 17
    OpenParenthesis   shift, and go to state 56
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I                     go to state 57
    ArithmeticExpression  go to state 91
    T                     go to state 42
    F                     go to state 43


State 67

   40 ArithmeticExpression: ArithmeticExpression Plus • T

    Identifier        shift, and go to state 17
    OpenParenthesis   shift, and go to state 56
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I  go to state 57
    T  go to state 92
    F  go to state 43


State 68

   41 ArithmeticExpression: ArithmeticExpression Minus • T

    Identifier        shift, and go to state 17
    OpenParenthesis   shift, and go to state 56
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I  go to state 57
    T  go to state 93
    F  go to state 43


State 69

   43 T: T Mul • F

    Identifier        shift, and go to state 17
    OpenParenthesis   shift, and go to state 56
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I  go to state 57
    F  go to state 94


State 70

   45 T: T Mod • F

    Identifier        shift, and go to state 17
    OpenParenthesis   shift, and go to state 56
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I  go to state 57
    F  go to state 95


State 71

   44 T: T Div • F

    Identifier        shift, and go to state 17
    OpenParenthesis   shift, and go to state 56
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I  go to state 57
    F  go to state 96


State 72

   34 IfStatement: If BooleanExpression Then • Block SC
   35            | If BooleanExpression Then • Block Else Block SC

    Begin  shift, and go to state 97

    Block  go to state 98


State 73

   51 BooleanExpression: BooleanExpression Or • BooleanT

    Identifier        shift, and go to state 17
    Not               shift, and go to state 36
    OpenParenthesis   shift, and go to state 37
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I                     go to state 40
    ArithmeticExpression  go to state 41
    T                     go to state 42
    F                     go to state 43
    BooleanT              go to state 99
    BooleanF              go to state 46


State 74

   53 BooleanT: BooleanT And • BooleanF

    Identifier        shift, and go to state 17
    Not               shift, and go to state 36
    OpenParenthesis   shift, and go to state 37
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I                     go to state 40
    ArithmeticExpression  go to state 41
    T                     go to state 42
    F                     go to state 43
    BooleanF              go to state 100


State 75

   32 ForLoop: For I AsmtOp • ArithmeticExpression To ArithmeticExpression Do Block SC
   33        | For I AsmtOp • ArithmeticExpression DownTo ArithmeticExpression Do Block SC

    Identifier        shift, and go to state 17
    OpenParenthesis   shift, and go to state 56
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I                     go to state 57
    ArithmeticExpression  go to state 101
    T                     go to state 42
    F                     go to state 43


State 76

   36 WhileLoop: While BooleanExpression Do • Block SC

    Begin  shift, and go to state 97

    Block  go to state 102


State 77

   16 M: Begin B End Stop •

    $default  reduce using rule 16 (M)


State 78

   19 S: I AsmtOp Expression • SC

    SC  shift, and go to state 103


State 79

   38 Expression: ArithmeticExpression •
   40 ArithmeticExpression: ArithmeticExpression • Plus T
   41                     | ArithmeticExpression • Minus T
   56 BooleanF: ArithmeticExpression • RelationalOperator ArithmeticExpression

    RelationalOperator  shift, and go to state 66
    Plus                shift, and go to state 67
    Minus               shift, and go to state 68

    $default  reduce using rule 38 (Expression)


State 80

   37 Expression: BooleanExpression •
   51 BooleanExpression: BooleanExpression • Or BooleanT

    Or  shift, and go to state 73

    $default  reduce using rule 37 (Expression)


State 81

   13 RHS: Array $@4 • ArrayOpen $@5 NumberLiteral DoubleDots NumberLiteral ArrayClose Of Type

    ArrayOpen  shift, and go to state 104


State 82

    9 L: LHS Colon RHS SC •

    $default  reduce using rule 9 (L)


State 83

   40 ArithmeticExpression: ArithmeticExpression • Plus T
   41                     | ArithmeticExpression • Minus T
   48 F: OpenParenthesis ArithmeticExpression • CloseParenthesis

    CloseParenthesis  shift, and go to state 89
    Plus              shift, and go to state 67
    Minus             shift, and go to state 68


State 84

   26 I: Identifier ArrayOpen ArithmeticExpression ArrayClose •

    $default  reduce using rule 26 (I)


State 85

   20 S: Read OpenParenthesis I CloseParenthesis • SC

    SC  shift, and go to state 105


State 86

   30 WriteBody: String comma • WriteBody

    Identifier  shift, and go to state 17
    String      shift, and go to state 60

    I          go to state 61
    WriteBody  go to state 106


State 87

   28 WriteBody: I comma • WriteBody

    Identifier  shift, and go to state 17
    String      shift, and go to state 60

    I          go to state 61
    WriteBody  go to state 107


State 88

   21 S: Write OpenParenthesis WriteBody CloseParenthesis • SC

    SC  shift, and go to state 108


State 89

   48 F: OpenParenthesis ArithmeticExpression CloseParenthesis •

    $default  reduce using rule 48 (F)


State 90

   55 BooleanF: OpenParenthesis BooleanExpression CloseParenthesis •

    $default  reduce using rule 55 (BooleanF)


State 91

   40 ArithmeticExpression: ArithmeticExpression • Plus T
   41                     | ArithmeticExpression • Minus T
   56 BooleanF: ArithmeticExpression RelationalOperator ArithmeticExpression •

    Plus   shift, and go to state 67
    Minus  shift, and go to state 68

    $default  reduce using rule 56 (BooleanF)


State 92

   40 ArithmeticExpression: ArithmeticExpression Plus T •
   43 T: T • Mul F
   44  | T • Div F
   45  | T • Mod F

    Mul  shift, and go to state 69
    Mod  shift, and go to state 70
    Div  shift, and go to state 71

    $default  reduce using rule 40 (ArithmeticExpression)


State 93

   41 ArithmeticExpression: ArithmeticExpression Minus T •
   43 T: T • Mul F
   44  | T • Div F
   45  | T • Mod F

    Mul  shift, and go to state 69
    Mod  shift, and go to state 70
    Div  shift, and go to state 71

    $default  reduce using rule 41 (ArithmeticExpression)


State 94

   43 T: T Mul F •

    $default  reduce using rule 43 (T)


State 95

   45 T: T Mod F •

    $default  reduce using rule 45 (T)


State 96

   44 T: T Div F •

    $default  reduce using rule 44 (T)


State 97

   27 Block: Begin • B End

    Identifier  shift, and go to state 17
    Read        shift, and go to state 18
    Write       shift, and go to state 19
    If          shift, and go to state 20
    For         shift, and go to state 21
    While       shift, and go to state 22

    B            go to state 109
    S            go to state 24
    I            go to state 25
    ForLoop      go to state 26
    IfStatement  go to state 27
    WhileLoop    go to state 28


State 98

   34 IfStatement: If BooleanExpression Then Block • SC
   35            | If BooleanExpression Then Block • Else Block SC

    SC    shift, and go to state 110
    Else  shift, and go to state 111


State 99

   51 BooleanExpression: BooleanExpression Or BooleanT •
   53 BooleanT: BooleanT • And BooleanF

    And  shift, and go to state 74

    $default  reduce using rule 51 (BooleanExpression)


State 100

   53 BooleanT: BooleanT And BooleanF •

    $default  reduce using rule 53 (BooleanT)


State 101

   32 ForLoop: For I AsmtOp ArithmeticExpression • To ArithmeticExpression Do Block SC
   33        | For I AsmtOp ArithmeticExpression • DownTo ArithmeticExpression Do Block SC
   40 ArithmeticExpression: ArithmeticExpression • Plus T
   41                     | ArithmeticExpression • Minus T

    To      shift, and go to state 112
    DownTo  shift, and go to state 113
    Plus    shift, and go to state 67
    Minus   shift, and go to state 68


State 102

   36 WhileLoop: While BooleanExpression Do Block • SC

    SC  shift, and go to state 114


State 103

   19 S: I AsmtOp Expression SC •

    $default  reduce using rule 19 (S)


State 104

   13 RHS: Array $@4 ArrayOpen • $@5 NumberLiteral DoubleDots NumberLiteral ArrayClose Of Type

    $default  reduce using rule 12 ($@5)

    $@5  go to state 115


State 105

   20 S: Read OpenParenthesis I CloseParenthesis SC •

    $default  reduce using rule 20 (S)


State 106

   30 WriteBody: String comma WriteBody •

    $default  reduce using rule 30 (WriteBody)


State 107

   28 WriteBody: I comma WriteBody •

    $default  reduce using rule 28 (WriteBody)


State 108

   21 S: Write OpenParenthesis WriteBody CloseParenthesis SC •

    $default  reduce using rule 21 (S)


State 109

   27 Block: Begin B • End

    End  shift, and go to state 116


State 110

   34 IfStatement: If BooleanExpression Then Block SC •

    $default  reduce using rule 34 (IfStatement)


State 111

   35 IfStatement: If BooleanExpression Then Block Else • Block SC

    Begin  shift, and go to state 97

    Block  go to state 117


State 112

   32 ForLoop: For I AsmtOp ArithmeticExpression To • ArithmeticExpression Do Block SC

    Identifier        shift, and go to state 17
    OpenParenthesis   shift, and go to state 56
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I                     go to state 57
    ArithmeticExpression  go to state 118
    T                     go to state 42
    F                     go to state 43


State 113

   33 ForLoop: For I AsmtOp ArithmeticExpression DownTo • ArithmeticExpression Do Block SC

    Identifier        shift, and go to state 17
    OpenParenthesis   shift, and go to state 56
    NumberLiteral     shift, and go to state 38
    CharacterLiteral  shift, and go to state 39

    I                     go to state 57
    ArithmeticExpression  go to state 119
    T                     go to state 42
    F                     go to state 43


State 114

   36 WhileLoop: While BooleanExpression Do Block SC •

    $default  reduce using rule 36 (WhileLoop)


State 115

   13 RHS: Array $@4 ArrayOpen $@5 • NumberLiteral DoubleDots NumberLiteral ArrayClose Of Type

    NumberLiteral  shift, and go to state 120


State 116

   27 Block: Begin B End •

    $default  reduce using rule 27 (Block)


State 117

   35 IfStatement: If BooleanExpression Then Block Else Block • SC

    SC  shift, and go to state 121


State 118

   32 ForLoop: For I AsmtOp ArithmeticExpression To ArithmeticExpression • Do Block SC
   40 ArithmeticExpression: ArithmeticExpression • Plus T
   41                     | ArithmeticExpression • Minus T

    Do     shift, and go to state 122
    Plus   shift, and go to state 67
    Minus  shift, and go to state 68


State 119

   33 ForLoop: For I AsmtOp ArithmeticExpression DownTo ArithmeticExpression • Do Block SC
   40 ArithmeticExpression: ArithmeticExpression • Plus T
   41                     | ArithmeticExpression • Minus T

    Do     shift, and go to state 123
    Plus   shift, and go to state 67
    Minus  shift, and go to state 68


State 120

   13 RHS: Array $@4 ArrayOpen $@5 NumberLiteral • DoubleDots NumberLiteral ArrayClose Of Type

    DoubleDots  shift, and go to state 124


State 121

   35 IfStatement: If BooleanExpression Then Block Else Block SC •

    $default  reduce using rule 35 (IfStatement)


State 122

   32 ForLoop: For I AsmtOp ArithmeticExpression To ArithmeticExpression Do • Block SC

    Begin  shift, and go to state 97

    Block  go to state 125


State 123

   33 ForLoop: For I AsmtOp ArithmeticExpression DownTo ArithmeticExpression Do • Block SC

    Begin  shift, and go to state 97

    Block  go to state 126


State 124

   13 RHS: Array $@4 ArrayOpen $@5 NumberLiteral DoubleDots • NumberLiteral ArrayClose Of Type

    NumberLiteral  shift, and go to state 127


State 125

   32 ForLoop: For I AsmtOp ArithmeticExpression To ArithmeticExpression Do Block • SC

    SC  shift, and go to state 128


State 126

   33 ForLoop: For I AsmtOp ArithmeticExpression DownTo ArithmeticExpression Do Block • SC

    SC  shift, and go to state 129


State 127

   13 RHS: Array $@4 ArrayOpen $@5 NumberLiteral DoubleDots NumberLiteral • ArrayClose Of Type

    ArrayClose  shift, and go to state 130


State 128

   32 ForLoop: For I AsmtOp ArithmeticExpression To ArithmeticExpression Do Block SC •

    $default  reduce using rule 32 (ForLoop)


State 129

   33 ForLoop: For I AsmtOp ArithmeticExpression DownTo ArithmeticExpression Do Block SC •

    $default  reduce using rule 33 (ForLoop)


State 130

   13 RHS: Array $@4 ArrayOpen $@5 NumberLiteral DoubleDots NumberLiteral ArrayClose • Of Type

    Of  shift, and go to state 131


State 131

   13 RHS: Array $@4 ArrayOpen $@5 NumberLiteral DoubleDots NumberLiteral ArrayClose Of • Type

    Type  shift, and go to state 132


State 132

   13 RHS: Array $@4 ArrayOpen $@5 NumberLiteral DoubleDots NumberLiteral ArrayClose Of Type •

    $default  reduce using rule 13 (RHS)
